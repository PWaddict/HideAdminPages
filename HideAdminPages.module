<?php namespace ProcessWire;

/**
 * Hide Admin Pages Module
 * ProcessWire 3.x, Copyright 2018 by Ryan Cramer
 * https://processwire.com
 *
 */

class HideAdminPages extends WireData implements Module, ConfigurableModule {

  public static function getModuleInfo() {

    return array(
      'title' => 'Hide Admin Pages',
      'version' => '1.0.0',
      'summary' => 'Hide admin pages for non-superusers.',
      'singular' => true,
      'autoload' => true,
      'author' => 'PWaddict',
      'icon' => 'eye-slash'
    );
  }

  protected $data = array();

  static public function getDefaultData() {
    return array(
      "specifiedTemplates" => array()
    );
  }

  public function __construct() {
    foreach(self::getDefaultData() as $key => $value) {
      $this->$key = $value;
    }
  }

  public function init() {
    if(!isset($_GET['render']) || $this->user->isSuperuser()) return;
    $this->addHookAfter('ProcessPageList::find', $this, 'pageListHiddenPages');
  }

  public function pageListHiddenPages(HookEvent $event) {

    $pages = $event->return;

    if($this->config->ajax) {
      foreach($pages as $p) {
        if($p->template->name == in_array($p->template->id, $this->data['specifiedTemplates']))
        $pages->remove($p);
      }

      $event->return = $pages;
    }
  }

  public function getModuleConfigInputfields(array $data) {

    $data = array_merge(self::getDefaultData(), $data);
    $inputfields = new InputfieldWrapper();

    $f = $this->wire('modules')->get('InputfieldAsmSelect');
    $f->attr('name+id', 'specifiedTemplates');
    $f->label = __('Specified Templates');
    $f->description = __("Select the templates of the pages you want to hide for non-superusers.");
    $f->setAsmSelectOption('sortable', false);
    foreach($this->wire('templates') as $t) $f->addOption($t->id,$t->name);
    if(isset($data['specifiedTemplates'])) $f->value = $data['specifiedTemplates'];
    $inputfields->add($f);

    return $inputfields;
    }
}
